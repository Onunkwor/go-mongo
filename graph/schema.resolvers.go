package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"
	"fmt"

	"github.com/onunkwor/go-mongo/database"
	"github.com/onunkwor/go-mongo/graph/model"
)
var db = database.Connect("go-mongo")
// CrateJobListing is the resolver for the crateJobListing field.
func (r *mutationResolver) CrateJobListing(ctx context.Context, input model.CreateJobListingInput) (*model.JobListing, error) {
	job, err := db.CreateJobListing(input)
	if err != nil {
		return nil, fmt.Errorf("failed to create job listing: %v", err)
	}
	return job, nil
}

// UpdateJobListing is the resolver for the updateJobListing field.
func (r *mutationResolver) UpdateJobListing(ctx context.Context, id string, input model.UpdateJobListingInput) (*model.JobListing, error) {
	panic(fmt.Errorf("not implemented: UpdateJobListing - updateJobListing"))
}

// DeleteJobListing is the resolver for the deleteJobListing field.
func (r *mutationResolver) DeleteJobListing(ctx context.Context, id string) (*model.DeleteJobResponse, error) {
	panic(fmt.Errorf("not implemented: DeleteJobListing - deleteJobListing"))
}

// Jobs is the resolver for the jobs field.
func (r *queryResolver) Jobs(ctx context.Context) ([]*model.JobListing, error) {
	jobs, err := db.GetJobs()
	if err != nil {
		return nil, fmt.Errorf("failed to get jobs: %w", err)
	}
	return jobs, nil
}

// Job is the resolver for the job field.
func (r *queryResolver) Job(ctx context.Context, id string) (*model.JobListing, error) {
	job, err := db.GetJob(id)
	if err != nil {
		return nil, fmt.Errorf("failed to get job by ID %s: %w", id, err)
	}
	return job, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	var db =database.Connect("go-mongo")
*/
